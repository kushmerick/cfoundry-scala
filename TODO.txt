- support for dependencies that hang off resources: app bits & files,
  and user roles [IN PROGRESS]

- all properties & relationships of all resources -- rather incomplete
  today

- Eliminate all the code for each CF resource and it's
  properties/children/parents.  Two approaches:

   o Grab the entire payload from CC rather than plucking out known
    items; if CC sends "foo_guid" then infer parent Foo; if CC sends
    "foos_url" then infer child Foo; otherwise infer property "foo"
    (but we lose static typing -- so this is a bad idea).

  o Write a script to load CF cloud controller and use Ruby reflection
    to automatically generate the corresponding cfoundry-scala CF
    resource specifications.

- reimplement Java friendliness with the Scala macro feature when it
  supports adding new members to a class

- Scala consumption of the JF API is weak; for example the following
  does not compile: "for (org <- client.getOrganizations) { ... }".
  The following implicit conversation is inadequate: "implicit def
  resourceList2resourceBuffer[T <: Resource](list: java.util.List[T]):
  scala.collection.Iterable[T] = list"
